{"version":3,"sources":["request.js","axios.js","Banner.js","Header.js","Row.js","App.js","reportWebVitals.js","index.js"],"names":["APIKEY","requests","fetchTreding","fetchNetFlixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorroMovies","fetchRomanticMovies","fetchDocumentaries","instance","axios","create","baseURL","Banner","str","n","useState","movie","setMovie","useEffect","a","get","request","data","results","Math","floor","random","length","fetchData","className","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","substr","Header","show","setShow","window","addEventListener","scrollY","removeEventListener","src","alt","Row","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","console","log","map","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","handleTrailer","poster_path","id","videoId","opts","height","width","playerVar","autoplay","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8957ae1.chunk.js","sourcesContent":["const APIKEY = \"6dd64b93873219770904835b696ec2ec\";\r\n\r\nconst requests = {\r\n    fetchTreding: `/trending/all/week?api_key=${APIKEY}&language=en-US`,\r\n    fetchNetFlixOriginals:`/discover/tv?api_key=${APIKEY}&with_networks=213`,\r\n    fetchTopRated:`/movie/top_rated?api_key=${APIKEY}&language=en-US`,\r\n    fetchActionMovies:`/discover/movie?api_key=${APIKEY}&with_genres=28`,\r\n    fetchComedyMovies:`/discover/movie?api_key=${APIKEY}&with_genres=35`,\r\n    fetchHorroMovies:`/discover/movie?api_key=${APIKEY}&with_genres=27`,\r\n    fetchRomanticMovies:`/discover/movie?api_key=${APIKEY}&with_genres=10749`,\r\n    fetchDocumentaries:`/discover/movie?api_key=${APIKEY}&with_genres=99`\r\n}\r\n\r\nexport default requests;\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\"\r\n});\r\n\r\nexport default instance;","import React, { useEffect, useState } from 'react'\r\nimport './Banner.css'\r\nimport requests from './request'\r\nimport axios from './axios'\r\n\r\nfunction Banner() {\r\n\r\n    const [movie,setMovie] = useState([])\r\n\r\n    useEffect(()=>{\r\n      async function fetchData(){\r\n          const request = await axios.get(requests.fetchNetFlixOriginals)\r\n\r\n          setMovie(request.data.results[\r\n              Math.floor(Math.random()* request.data.results.length)\r\n          ])\r\n          return request;\r\n\r\n      }\r\n      fetchData();\r\n    },[])\r\n\r\n    function trucateDesc(str , n){\r\n        return str?.length > n ? str.substr(0,n-1) + \"...\" : str \r\n    }\r\n\r\n\r\n    return (\r\n        <header className=\"banner\"\r\n           style ={{\r\n               backgroundSize : \"cover\",\r\n               backgroundImage :`url(\"https://image.tmdb.org/t/p/original${movie?.backdrop_path}\")`,\r\n               backgroundPosition:\"center center\"\r\n           }}\r\n        >\r\n           <div className=\"banner_contents\">\r\n               <h1 className=\"banner_title\">\r\n                 {movie?.title || movie?.name || movie?.original_name}\r\n               </h1>\r\n               <div className=\"banner_buttons\">\r\n                   <button className=\"banner_button\">Play</button>\r\n                   <button className=\"banner_button\">My List</button>\r\n               </div>\r\n               <h1 className=\"banner_description\">{ trucateDesc(movie?.overview,150)}</h1>\r\n               </div> \r\n               <div className=\"banner_fadeBottom\"></div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Header.css'\r\n\r\nfunction Header() {\r\n    const [show , setShow] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        window.addEventListener(\"scroll\" , ()=>{\r\n            if(window.scrollY > 100){\r\n                setShow(true)\r\n            }else{\r\n                setShow(false)\r\n            }\r\n        })\r\n        return ()=>{\r\n            window.removeEventListener(\"scroll\")\r\n        }\r\n    },[])\r\n    return (\r\n        <div className={`header ${show && \"header_black\"}`}>\r\n            <img\r\n            className=\"header_logo\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/170px-Netflix_2015_logo.svg.png\"\r\n            alt=\"\"/> \r\n            <img\r\n            className=\"header_userIcon\"\r\n            src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/366be133850498.56ba69ac36858.png\"\r\n            alt=\"\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Row.css'\r\nimport axios from './axios';\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nconst baseUrl = \"https://image.tmdb.org/t/p/original\"\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl)\r\n            setMovies(request.data.results);\r\n            console.log(request.data.results)\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n\r\n    const handleTrailer = (movie) => {\r\n        if (trailerUrl) {\r\n            setTrailerUrl(\"\")\r\n        } else {\r\n            movieTrailer(movie?.name || \"\").then((url) => {\r\n                const urlParams = new URLSearchParams(new URL(url).search)\r\n                setTrailerUrl(urlParams.get('v'))\r\n            }).catch(() => console.log('Temporaily Unavailable'))\r\n        }\r\n    }\r\n\r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVar: {\r\n            autoplay: 1\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            {title}\r\n            <div className=\"row_posters\">\r\n                {\r\n                    movies.map(movie => (\r\n                        <img\r\n                            key={movie.id}\r\n                            onClick={() => handleTrailer(movie)}\r\n                            className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n                            src={`${baseUrl}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\r\n                            alt={movie.name}\r\n                        />\r\n\r\n                    ))}\r\n            </div>\r\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","import './App.css';\nimport Banner from './Banner';\nimport Header from './Header';\nimport requests from './request'\nimport Row from './Row'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Header />\n     <Banner />\n     <Row \n     isLargeRow = {true}\n     title = \"NETFLIX ORIGINALS\"\n     fetchUrl = {requests.fetchNetFlixOriginals}\n     />\n     <Row \n     title= \"Trending Now\"\n     fetchUrl = {requests.fetchTreding}\n     />\n     <Row \n     title= \"Top Rated\"\n     fetchUrl = {requests.fetchTopRated}\n     />\n     <Row \n     title= \"Action Movie\"\n     fetchUrl = {requests.fetchActionMovies}\n     />\n     <Row \n     title= \"Horrer Movie\"\n     fetchUrl = {requests.fetchHorroMovies}\n     />\n      <Row \n     title= \"Comedy Movie\"\n     fetchUrl = {requests.fetchComedyMovies}\n     />\n     <Row \n     title= \"Romance Movie\"\n     fetchUrl = {requests.fetchRomanticMovies}\n     />\n     <Row \n     title= \"Documentaries\"\n     fetchUrl = {requests.fetchDocumentaries}\n     />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}